{"ast":null,"code":"var _jsxFileName = \"/home/edo/Desktop/karijera/FER/5.semestar/Programsko in\\u017Einjerstvo/Projekt/webGym/IzvorniKod/src/pages/authPage/authPage.component.jsx\";\nimport React from 'react';\nimport './authPage.styles.scss';\nimport CustomButton from '../../components/custom-buttom/custom-button.component';\nimport FormInput from '../../components/formInput/formInput.component';\n\nclass AuthPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleLogin = async (name, surname, coach, admin, gymOwner) => {\n      await this.props.handleLogin(name, surname, coach, admin, gymOwner);\n      this.props.history.push(\"/\");\n    };\n\n    this.handleButtonLoginClick = () => {\n      fetch('https://6841124a-8115-4b62-bdf7-5dcdbd3c17a9.mock.pstmnN.io/login', {\n        method: 'POST',\n        credentials: 'include',\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      }).then(response => {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          return Promise.reject();\n        }\n      }).then(res => {\n        console.log(\"1\");\n        this.handleLogin(res.name, res.surname, res.coach, res.admin, res.gymOwner);\n      });\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      error: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \"Prijava\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"username\",\n      type: \"username\",\n      handleChange: this.handleChange,\n      value: this.state.username,\n      label: \"Korisni\\u010Dko ime\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"Lozinka\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      onClick: this.handleButtonLoginClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \" Prijava \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, this.state.error))));\n  }\n\n}\n\nexport default AuthPage;","map":{"version":3,"sources":["/home/edo/Desktop/karijera/FER/5.semestar/Programsko inžinjerstvo/Projekt/webGym/IzvorniKod/src/pages/authPage/authPage.component.jsx"],"names":["React","CustomButton","FormInput","AuthPage","Component","constructor","props","handleChange","event","value","name","target","setState","handleLogin","surname","coach","admin","gymOwner","history","push","handleButtonLoginClick","fetch","method","credentials","body","JSON","stringify","username","state","password","then","response","status","json","Promise","reject","res","console","log","error","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './authPage.styles.scss'\nimport CustomButton from '../../components/custom-buttom/custom-button.component'\nimport FormInput from '../../components/formInput/formInput.component'\n\nclass AuthPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: '',\n      password: '',\n      error: ''\n    }\n  }\n\n  handleChange = event => {\n    const { value, name } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleLogin = async (name, surname, coach, admin, gymOwner) => {\n      await this.props.handleLogin(name, surname, coach, admin, gymOwner)\n      this.props.history.push(\"/\")\n  }\n\n\n  handleButtonLoginClick = () => {\n    fetch('https://6841124a-8115-4b62-bdf7-5dcdbd3c17a9.mock.pstmnN.io/login', {\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify({username:this.state.username, password:this.state.password})\n    }).then(response => {\n      if(response.status === 200){\n        return response.json()\n      } else {\n        return Promise.reject()\n      }\n    }).then(res => {\n      console.log(\"1\")\n      this.handleLogin(res.name, res.surname, res.coach, res.admin, res.gymOwner)\n    })\n  }\n\n\n\n  render() {\n    return (\n      <div className='login-page'>\n        <fieldset>\n          <legend>Prijava</legend>\n          <div className='login-container'>\n            <FormInput\n                name='username'\n                type='username'\n                handleChange={this.handleChange}\n                value={this.state.username}\n                label='Korisničko ime'\n                required\n            />\n            <FormInput\n                name='password'\n                type='password'\n                value={this.state.password}\n                handleChange={this.handleChange}\n                label='Lozinka'\n                required\n            />\n            <CustomButton onClick = {this.handleButtonLoginClick}> Prijava </CustomButton>\n            <p>{this.state.error}</p>\n          </div>\n        </fieldset>\n      </div>\n    );\n  }\n}\n\nexport default AuthPage"]},"metadata":{},"sourceType":"module"}